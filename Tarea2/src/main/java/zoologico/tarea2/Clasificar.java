/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zoologico.tarea2;

import zoologico.tarea2.paneles_clasificar.ClasificarCelentereos;
import zoologico.tarea2.paneles_clasificar.ClasificarPeces;
import zoologico.tarea2.paneles_clasificar.ClasificarAves;
import zoologico.tarea2.paneles_clasificar.ClasificarMoluscos;
import zoologico.tarea2.paneles_clasificar.ClasificarAntropodos;
import zoologico.tarea2.paneles_clasificar.ClasificarReptiles;
import zoologico.tarea2.paneles_clasificar.ClasificarAnfibios;
import zoologico.tarea2.paneles_clasificar.ClasificarEquinodermos;
import zoologico.tarea2.paneles_clasificar.ClasificarGusanos;
import zoologico.tarea2.paneles_clasificar.ClasificarMamiferos;
import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JPanel;

/**
 *
 * @author Wilson
 */

public class Clasificar extends javax.swing.JFrame {

    public String usuario;
    public String contrasena;
    private String Nombre;
    private String Grupo;
    private ClasificarMamiferos cMamiferos;
    private ClasificarAves cAves;
    private ClasificarAnfibios cAnfibios;
    private ClasificarReptiles cReptiles;
    private ClasificarPeces cPeces;
    private ClasificarAntropodos cAntropodos;
    private ClasificarCelentereos cCelentereos;
    private ClasificarEquinodermos cEquinodermos;
    private ClasificarGusanos cGusanos;
    private ClasificarMoluscos cMoluscos;
    public Clasificar(String usuario,String contrasena) {
        initComponents();
        this.usuario=usuario;
        this.contrasena=contrasena;
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelAnimal = new javax.swing.JLabel();
        generarAnimal = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        panelCambiante = new javax.swing.JPanel();
        peso = new javax.swing.JTextField();
        color = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bEnviar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Â¿A que especie pertenece el siguiente animal?");

        labelAnimal.setText("Aprete boton generar animal");

        generarAnimal.setText("Generar animal");
        generarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarAnimalActionPerformed(evt);
            }
        });

        volver.setText("<<Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCambianteLayout = new javax.swing.GroupLayout(panelCambiante);
        panelCambiante.setLayout(panelCambianteLayout);
        panelCambianteLayout.setHorizontalGroup(
            panelCambianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 267, Short.MAX_VALUE)
        );
        panelCambianteLayout.setVerticalGroup(
            panelCambianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 176, Short.MAX_VALUE)
        );

        color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorActionPerformed(evt);
            }
        });

        jLabel2.setText("Peso");

        jLabel3.setText("Color");

        bEnviar.setText("Enviar>>");
        bEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(peso)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(panelCambiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(labelAnimal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(generarAnimal))))
                        .addContainerGap(227, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(volver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bEnviar)
                        .addGap(60, 60, 60))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarAnimal))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(panelCambiante, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volver)
                    .addComponent(bEnviar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarAnimalActionPerformed

        try (Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/zoobd", usuario, contrasena)) {
            PreparedStatement ps = c.prepareStatement("SELECT nombre,grupo FROM animales ORDER BY RAND() LIMIT 1;");
            ResultSet rs=ps.executeQuery();
            
            if(rs.next()){
                Nombre=rs.getString("nombre");
                Grupo=rs.getString("grupo");
                labelAnimal.setText(Nombre);
                switch (Grupo) {
                    case "Mamiferos":
                         cMamiferos = new ClasificarMamiferos();
                            mostrarPanel(cMamiferos);
                        break;
                    case "Aves":
                        cAves=new ClasificarAves();
                        mostrarPanel(cAves);
                        break;
                    case "Peces":
                        cPeces=new ClasificarPeces();
                        mostrarPanel(cPeces);
                        break;
                    case "Reptiles":
                        cReptiles=new ClasificarReptiles();
                        mostrarPanel(cReptiles);
                        break;
                    case "Anfibios":
                        cAnfibios= new ClasificarAnfibios();
                        mostrarPanel(cAnfibios);
                        break;
                    case "Antropodos":
                        cAntropodos =new ClasificarAntropodos();
                        mostrarPanel(cAntropodos);
                        break;
                    case "Moluscos":
                        cMoluscos= new ClasificarMoluscos();
                        mostrarPanel(cMoluscos);
                        break;
                    case "Celentereos":
                        cCelentereos=new ClasificarCelentereos();
                        mostrarPanel(cCelentereos);
                        break;
                    case "Poriferos":
                        panelCambiante.removeAll();
                        panelCambiante.revalidate();
                        panelCambiante.repaint();
                        break;
                    case "Gusanos":
                        cGusanos=new ClasificarGusanos();
                        mostrarPanel(cGusanos);
                        break;
                    case "Equinodermos":
                        cEquinodermos =new ClasificarEquinodermos();
                        mostrarPanel(cEquinodermos);
                        break;
                    default:
                        break;
                }
            }
            c.close();
        }
        catch (SQLException ex) {
            System.out.println("ERROR");
        }
    }//GEN-LAST:event_generarAnimalActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        new ZoologicoGui(usuario,contrasena).setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_volverActionPerformed

    private void colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colorActionPerformed

    private void bEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnviarActionPerformed
        try (Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/zoobd", usuario, contrasena)) {
            
            String parametros= Grupo.toLowerCase()+"(nombre, peso, color";
            String valores ="'"+Nombre+"',"+peso.getText()+",'"+color.getText()+"'";
            switch (Grupo) {
                case "Mamiferos":
                    parametros +=",n_patas";
                    valores +=","+cMamiferos.patasAnimal.getText();
                    break;
                case "Aves":
                    parametros+=",c_alas";
                    valores +=",'"+cAves.c_alas.getText()+"'";
                    break;
                case "Peces":
                    parametros+=",escamas,c_aletas";
                    valores +=",'"+cPeces.escamas.getSelectedItem()+"',"+cPeces.aletas.getText()+"'";
                    break;
                case "Reptiles":
                    parametros+=",tipo";
                    valores +=",'"+cReptiles.tipoReptil.getSelectedItem()+"'";
                    break;
                case "Anfibios":
                    parametros+=",piel";
                    valores +=",'"+cAnfibios.tipoPiel.getSelectedItem()+"'";
                    break;
                case "Antropodos":
                    parametros+=",c_pares_patas,antenas";
                    valores +=",'"+cAntropodos.patasAntropodos.getText()+"','"+cAntropodos.antenas.getSelectedItem()+"'";
                    break;
                case "Moluscos":
                    parametros+=",t_concha";
                    valores +=","+cMoluscos.concha.getText();
                    break;
                case "Celentereos":
                    parametros+=",tentaculos";
                    valores +=",'"+cCelentereos.tentaculos.getText()+"'";
                    break;
                case "Gusanos":
                    parametros+=",cuerpo";
                    valores +=",'"+cGusanos.cuerpoGusano.getText()+"'";
                    break;
                case "Equinodermos":
                    parametros+=",tipo";
                    valores +=","+cEquinodermos.tipo.getSelectedItem();
                    break;
                default:
                    parametros = "";
                    valores = "";
                    break;
                }
            PreparedStatement ps = c.prepareStatement("INSERT INTO "+parametros+ ") VALUES ("+valores+");");
            ps.execute();
            c.close();
            peso.setText("");
            color.setText("");
            generarAnimalActionPerformed(evt);
        }
        catch (SQLException ex) {
            System.out.println("ERROR  "+ex);
        }
    }//GEN-LAST:event_bEnviarActionPerformed
    
    private void mostrarPanel(JPanel p){
        p.setSize(257,176);
        p.setLocation(0,0);
        
        panelCambiante.removeAll();
        panelCambiante.add(p,BorderLayout.CENTER);
        panelCambiante.revalidate();
        panelCambiante.repaint();
    }
    /**
     * @param args the command line arguments
     */
  

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bEnviar;
    private javax.swing.JTextField color;
    private javax.swing.JButton generarAnimal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelAnimal;
    private javax.swing.JPanel panelCambiante;
    private javax.swing.JTextField peso;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
