/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package zoologico.tarea2;

import java.awt.BorderLayout;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JPanel;

/**
 *
 * @author Wilson
 */

public class Clasificar extends javax.swing.JFrame {

    /**
     * Creates new form Clasificar
     */
    public String Nombre;
    public String Grupo;
    public ClasificarMamiferos cMamiferos;
    public Clasificar() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        labelAnimal = new javax.swing.JLabel();
        generarAnimal = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        panelCambiante = new javax.swing.JPanel();
        peso = new javax.swing.JTextField();
        color = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        bEnviar = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Â¿A que especie pertenece el siguiente animal?");

        labelAnimal.setText("Aprete boton generar animal");

        generarAnimal.setText("Generar animal");
        generarAnimal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                generarAnimalActionPerformed(evt);
            }
        });

        volver.setText("<<Volver");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelCambianteLayout = new javax.swing.GroupLayout(panelCambiante);
        panelCambiante.setLayout(panelCambianteLayout);
        panelCambianteLayout.setHorizontalGroup(
            panelCambianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 267, Short.MAX_VALUE)
        );
        panelCambianteLayout.setVerticalGroup(
            panelCambianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 117, Short.MAX_VALUE)
        );

        peso.setText("Introduzca peso del animal");

        color.setText("Introduzca color del animal");
        color.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                colorActionPerformed(evt);
            }
        });

        jLabel2.setText("Peso");

        jLabel3.setText("Color");

        bEnviar.setText("Enviar>>");
        bEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEnviarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(panelCambiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(jLabel2)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(44, 44, 44)
                                            .addComponent(jLabel3))
                                        .addComponent(labelAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(generarAnimal)
                                    .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(178, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(volver)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bEnviar)
                        .addGap(60, 60, 60))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAnimal, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(generarAnimal))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(jLabel2))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(peso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(color, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(18, 18, 18)
                .addComponent(panelCambiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 77, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(volver)
                    .addComponent(bEnviar))
                .addGap(21, 21, 21))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void generarAnimalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_generarAnimalActionPerformed

        try (Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/zoobd", "root", "yuyin10")) {
            PreparedStatement ps = c.prepareStatement("SELECT nombre,grupo FROM animales ORDER BY RAND() LIMIT 1;");
            ResultSet rs=ps.executeQuery();
            
            if(rs.next()){
                Nombre=rs.getString("nombre");
                Grupo=rs.getString("grupo");
                labelAnimal.setText(Nombre);
                switch (Grupo) {
                    case "Mamiferos":
                         cMamiferos = new ClasificarMamiferos();
                        mostrarPanel(cMamiferos);
                        break;
                    case "Aves":
                        mostrarPanel(new ClasificarAves());
                        break;
                    case "Peces":
                        mostrarPanel(new ClasificarPeces());
                        break;
                    case "Reptiles":
                        mostrarPanel(new ClasificarReptiles());
                        break;
                    case "Anfibios":
                        mostrarPanel(new ClasificarAnfibios());
                        break;
                    case "Antropodos":
                        mostrarPanel(new ClasificarAntropodos());
                        break;
                    case "Moluscos":
                        mostrarPanel(new ClasificarMoluscos());
                        break;
                    case "Celentereos":
                        mostrarPanel(new ClasificarCelentereos());
                        break;
                    case "Poriferos":
                        break;
                    case "Gusanos":
                        mostrarPanel(new ClasificarGusanos());
                        break;
                    case "Equinodermos":
                        mostrarPanel(new ClasificarEquinodermos());
                        break;
                    default:
                        break;
                }
            }
            c.close();
        }
        catch (SQLException ex) {
            System.out.println("ERROR");
        }
    }//GEN-LAST:event_generarAnimalActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        new ZoologicoGui().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_volverActionPerformed

    private void colorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_colorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_colorActionPerformed

    private void bEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEnviarActionPerformed
        try (Connection c = DriverManager.getConnection("jdbc:mysql://localhost:3306/zoobd", "root", "yuyin10")) {
            PreparedStatement ps = c.prepareStatement("INSERT INTO ? VALUES(?);");
            String temp;
            String temp2;
            switch (Grupo) {
                    case "Mamiferos":
                        temp=",n_patas)";
                        temp2 =","+cMamiferos.patasAnimal.getText();
                        break;
                    case "Aves":
                        temp="";
                        temp2 ="";
                        break;
                    case "Peces":
                        temp="";
                        temp2 ="";
                        break;
                    case "Reptiles":
                        temp="";
                        temp2 ="";
                        break;
                    case "Anfibios":
                        temp="";
                        temp2 ="";
                        break;
                    case "Antropodos":
                        temp="";
                        temp2 ="";
                        break;
                    case "Moluscos":
                        temp="";
                        temp2 ="";
                        break;
                    case "Celentereos":
                        temp="";
                        temp2 ="";
                        break;
                    case "Gusanos":
                        temp="";
                        temp2 ="";
                        break;
                    case "Equinodermos":
                        temp="";
                        temp2 ="";
                        break;
                    default:
                        temp = ")";
                        temp2 = ")";
                        break;
                }
            ps.setString(1, Grupo.toLowerCase()+"(nombre,peso,color"+temp);
            ps.setString(2, Nombre+","+peso.getText()+","+color.getText()+temp2);
            System.out.println(Grupo.toLowerCase()+"(nombre,peso,color"+temp);
            System.out.println(Nombre+","+peso.getText()+","+color.getText()+temp2);

            ps.execute();
            c.close();
        }
        catch (SQLException ex) {
            System.out.println("ERROR  "+ex);
        }
    }//GEN-LAST:event_bEnviarActionPerformed
    
    private void mostrarPanel(JPanel p){
        p.setSize(257,116);
        p.setLocation(0,0);
        
        panelCambiante.removeAll();
        panelCambiante.add(p,BorderLayout.CENTER);
        panelCambiante.revalidate();
        panelCambiante.repaint();
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Clasificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Clasificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Clasificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Clasificar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Clasificar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton bEnviar;
    private javax.swing.JTextField color;
    private javax.swing.JButton generarAnimal;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel labelAnimal;
    private javax.swing.JPanel panelCambiante;
    private javax.swing.JTextField peso;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
